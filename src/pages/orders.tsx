import { useState } from "react";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Badge } from "@/components/ui/badge";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
import { Package, Truck, CheckCircle, Clock, AlertCircle } from "lucide-react";

// Mock orders data
const mockOrders = [
  {
    id: "ORD-2025-001",
    productName: "ÏäàÌçºÏä§ÎÖ∏Ïö∞ ÎπÑÌÉÄÎØºC ÏÑ∏Îüº",
    quantity: 2,
    unitPrice: 15000,
    totalPrice: 30000,
    status: "paid",
    buyerName: "ÍπÄÍ≥†Í∞ù",
    buyerPhone: "010-1234-5678",
    buyerAddress: "ÏÑúÏö∏Ïãú Í∞ïÎÇ®Íµ¨ ÌÖåÌó§ÎûÄÎ°ú 123",
    createdAt: "2025-01-15",
    paidAt: "2025-01-15",
    shippedAt: null,
    deliveredAt: null
  },
  {
    id: "ORD-2025-002",
    productName: "ÏäàÌçºÏä§ÎÖ∏Ïö∞ ÌûàÏïåÎ£®Î°†ÏÇ∞ ÌÜ†ÎÑà",
    quantity: 1,
    unitPrice: 12000,
    totalPrice: 12000,
    status: "shipped",
    buyerName: "Ïù¥Íµ¨Îß§",
    buyerPhone: "010-5678-9012",
    buyerAddress: "Î∂ÄÏÇ∞Ïãú Ìï¥Ïö¥ÎåÄÍµ¨ Ìï¥Ïö¥ÎåÄÎ°ú 456",
    createdAt: "2025-01-10",
    paidAt: "2025-01-10",
    shippedAt: "2025-01-12",
    deliveredAt: null
  },
  {
    id: "ORD-2025-003",
    productName: "ÏäàÌçºÏä§ÎÖ∏Ïö∞ Î†àÌã∞ÎÜÄ ÌÅ¨Î¶º",
    quantity: 3,
    unitPrice: 18000,
    totalPrice: 54000,
    status: "delivered",
    buyerName: "Î∞ïÎßåÏ°±",
    buyerPhone: "010-9012-3456",
    buyerAddress: "ÎåÄÍµ¨Ïãú Ï§ëÍµ¨ Ï§ëÏïôÎåÄÎ°ú 789",
    createdAt: "2025-01-05",
    paidAt: "2025-01-05",
    shippedAt: "2025-01-07",
    deliveredAt: "2025-01-10"
  }
];

const statusConfig = {
  paid: { label: "Í≤∞Ï†úÏôÑÎ£å", color: "bg-blue-100 text-blue-800", icon: Clock },
  shipped: { label: "Î∞∞ÏÜ°Ï§ë", color: "bg-yellow-100 text-yellow-800", icon: Truck },
  delivered: { label: "Î∞∞ÏÜ°ÏôÑÎ£å", color: "bg-green-100 text-green-800", icon: CheckCircle },
  cancelled: { label: "Ï∑®ÏÜåÎê®", color: "bg-red-100 text-red-800", icon: AlertCircle }
};

export default function Orders() {
  const [selectedTab, setSelectedTab] = useState("all");

  const filteredOrders = selectedTab === "all" 
    ? mockOrders 
    : mockOrders.filter(order => order.status === selectedTab);

  return (
    <div className="space-y-8">
      {/* Header */}
      <div>
        <h1 className="text-3xl font-bold font-heading mb-2" style={{ color: 'hsl(0, 0%, 15%)' }}>
          Ï£ºÎ¨∏ Í¥ÄÎ¶¨
        </h1>
        <p className="text-gray-600">
          Îì±Î°ùÌïú Ï£ºÎ¨∏Ïùò ÌòÑÌô©ÏùÑ ÌôïÏù∏ÌïòÍ≥† Í¥ÄÎ¶¨ÌïòÏÑ∏Ïöî
        </p>
      </div>

      {/* Stats Cards */}
      <div className="grid grid-cols-1 md:grid-cols-4 gap-6">
        <Card>
          <CardContent className="p-6">
            <div className="flex items-center justify-between">
              <div>
                <p className="text-sm font-medium text-gray-500">Ï†ÑÏ≤¥ Ï£ºÎ¨∏</p>
                <p className="text-2xl font-bold">3Í±¥</p>
              </div>
              <Package className="h-8 w-8 text-gray-400" />
            </div>
          </CardContent>
        </Card>
        <Card>
          <CardContent className="p-6">
            <div className="flex items-center justify-between">
              <div>
                <p className="text-sm font-medium text-gray-500">Î∞∞ÏÜ°Ï§ë</p>
                <p className="text-2xl font-bold text-yellow-600">1Í±¥</p>
              </div>
              <Truck className="h-8 w-8 text-yellow-400" />
            </div>
          </CardContent>
        </Card>
        <Card>
          <CardContent className="p-6">
            <div className="flex items-center justify-between">
              <div>
                <p className="text-sm font-medium text-gray-500">Î∞∞ÏÜ°ÏôÑÎ£å</p>
                <p className="text-2xl font-bold text-green-600">1Í±¥</p>
              </div>
              <CheckCircle className="h-8 w-8 text-green-400" />
            </div>
          </CardContent>
        </Card>
        <Card>
          <CardContent className="p-6">
            <div className="flex items-center justify-between">
              <div>
                <p className="text-sm font-medium text-gray-500">Ï¥ù Îß§Ï∂ú</p>
                <p className="text-2xl font-bold">‚Ç©96,000</p>
              </div>
              <div className="text-2xl">üí∞</div>
            </div>
          </CardContent>
        </Card>
      </div>

      {/* Orders Table */}
      <Tabs value={selectedTab} onValueChange={setSelectedTab}>
        <TabsList>
          <TabsTrigger value="all">Ï†ÑÏ≤¥</TabsTrigger>
          <TabsTrigger value="paid">Í≤∞Ï†úÏôÑÎ£å</TabsTrigger>
          <TabsTrigger value="shipped">Î∞∞ÏÜ°Ï§ë</TabsTrigger>
          <TabsTrigger value="delivered">Î∞∞ÏÜ°ÏôÑÎ£å</TabsTrigger>
        </TabsList>

        <TabsContent value={selectedTab} className="space-y-4">
          {filteredOrders.map((order) => {
            const StatusIcon = statusConfig[order.status as keyof typeof statusConfig].icon;
            return (
              <Card key={order.id}>
                <CardContent className="p-6">
                  <div className="flex items-start justify-between mb-4">
                    <div className="flex-1">
                      <div className="flex items-center gap-3 mb-2">
                        <h3 className="font-semibold text-lg">{order.id}</h3>
                        <Badge className={statusConfig[order.status as keyof typeof statusConfig].color}>
                          <StatusIcon className="w-3 h-3 mr-1" />
                          {statusConfig[order.status as keyof typeof statusConfig].label}
                        </Badge>
                      </div>
                      <p className="text-gray-600 mb-1">{order.productName}</p>
                      <p className="text-sm text-gray-500">Ï£ºÎ¨∏Ïùº: {order.createdAt}</p>
                    </div>
                    <div className="text-right">
                      <p className="text-2xl font-bold">‚Ç©{order.totalPrice.toLocaleString()}</p>
                      <p className="text-sm text-gray-500">{order.quantity}Í∞ú</p>
                    </div>
                  </div>

                  <div className="grid grid-cols-1 md:grid-cols-2 gap-4 pt-4 border-t">
                    <div>
                      <h4 className="font-medium mb-2">Íµ¨Îß§Ïûê Ï†ïÎ≥¥</h4>
                      <div className="space-y-1 text-sm">
                        <p><span className="font-medium">Ïù¥Î¶Ñ:</span> {order.buyerName}</p>
                        <p><span className="font-medium">Ï†ÑÌôî:</span> {order.buyerPhone}</p>
                        <p><span className="font-medium">Ï£ºÏÜå:</span> {order.buyerAddress}</p>
                      </div>
                    </div>
                    <div>
                      <h4 className="font-medium mb-2">Î∞∞ÏÜ° Ï†ïÎ≥¥</h4>
                      <div className="space-y-1 text-sm">
                        {order.paidAt && <p><span className="font-medium">Í≤∞Ï†úÏùº:</span> {order.paidAt}</p>}
                        {order.shippedAt && <p><span className="font-medium">Î∞úÏÜ°Ïùº:</span> {order.shippedAt}</p>}
                        {order.deliveredAt && <p><span className="font-medium">Î∞∞ÏÜ°ÏôÑÎ£å:</span> {order.deliveredAt}</p>}
                      </div>
                    </div>
                  </div>
                </CardContent>
              </Card>
            );
          })}
        </TabsContent>
      </Tabs>
    </div>
  );
}
